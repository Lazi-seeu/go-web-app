name: Deploy Go Web App to AWS EC2

on:
  push:
    branches:
      - main  # Trigger deployment on the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # Ensure Go version is correct

      - name: Build Go Application
        run: |
          go build -o go-web-app main.go

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Copy Files to AWS EC2 via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_SSH_HOST }}
          username: ec2-user  # ✅ Ensure we use the correct EC2 user
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "go-web-app"
          target: "/home/ec2-user/"
          timeout: 60
          key_path: key.pem  # ✅ Explicitly set the SSH key path

      - name: Deploy and Start Go Application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_SSH_HOST }}
          username: ec2-user  # ✅ Ensure we use the correct EC2 user
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            set -e  # Exit on error
            echo "✅ Stopping any existing service..."
            sudo systemctl stop go-web-app || true

            echo "✅ Moving new binary to /usr/local/bin..."
            sudo mv /home/ec2-user/go-web-app /usr/local/bin/go-web-app
            sudo chmod +x /usr/local/bin/go-web-app

            echo "✅ Creating systemd service..."
            sudo bash -c 'cat > /etc/systemd/system/go-web-app.service <<EOF
            [Unit]
            Description=Go Web Application
            After=network.target

            [Service]
            ExecStart=/usr/local/bin/go-web-app -host 0.0.0.0 -port 8080
            Restart=always
            User=ec2-user
            WorkingDirectory=/home/ec2-user
            Environment=PORT=8080
            StandardOutput=syslog
            StandardError=syslog

            [Install]
            WantedBy=multi-user.target
            EOF'

            echo "✅ Reloading systemd and starting service..."
            sudo systemctl daemon-reload
            sudo systemctl enable go-web-app
            sudo systemctl start go-web-app

            echo "✅ Checking service status..."
            sudo systemctl status go-web-app --no-pager

